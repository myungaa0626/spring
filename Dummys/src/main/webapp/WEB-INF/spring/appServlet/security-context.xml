<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security" 
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
 <security:http auto-config="true">
<!-- 		 <security:headers>
		 	<security:frame-options policy="SAMEORIGIN"/>
		 </security:headers> -->
		 
 		<security:csrf disabled="true"/>

		<!-- default-target-url="/index.do" -->
		<security:form-login login-page="/users/login.do"
		authentication-success-handler-ref="customLoginSuccess"
		authentication-failure-url="/users/login.do?error"
		username-parameter="userid"
		password-parameter="password"/>
		<!-- "/users/error.do" -->
		<security:logout logout-success-url="/index.do"/>
		
		
		<security:intercept-url pattern="/TaeWoo/**" access="permitAll"/>
		<security:intercept-url pattern="/users/**" access="permitAll"/>
		<security:intercept-url pattern="/join/**" access="permitAll"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/type/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/gaussian/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/board/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/tendinous/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/schema/schemaList.do**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="driverManagerDataSource"
			   users-by-username-query="select userid, password, enabled from users where userid=?" 
			
			   authorities-by-username-query="select u.userid , r.role_name  
			           from users u join users_role r 
			           on u.userid = r.userid 
			           where u.userid=?" />
			<security:password-encoder ref="bCryptPasswordEncoder"/> <!-- 암호화 된 비밀번호 처리 -->
		</security:authentication-provider>
	</security:authentication-manager>
	
	<bean id="customLoginSuccess" class="kr.or.dummys.utils.CustomLoginSuccessHandler"></bean>
</beans>
